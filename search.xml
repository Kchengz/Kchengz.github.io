<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue学习笔记1</title>
      <link href="/2019/11/14/vue-note1/"/>
      <url>/2019/11/14/vue-note1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node框架KOA</title>
      <link href="/2019/11/13/koa/"/>
      <url>/2019/11/13/koa/</url>
      
        <content type="html"><![CDATA[<h2 id="koa-使用"><a href="#koa-使用" class="headerlink" title="koa 使用"></a>koa 使用</h2><ul><li><p>首先需要初始化一个项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure></li><li><p>然后安装 koa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install koa -D</span><br></pre></td></tr></table></figure></li><li><p>新建一个server.js</p></li><li><p>引入koa及koa路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const koa = require(&quot;koa&quot;);</span><br><span class="line">const Router = require(&quot;koa-router&quot;);</span><br></pre></td></tr></table></figure></li><li><p>使用koa类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let server = new koa();</span><br></pre></td></tr></table></figure></li><li><p>监听8080端口号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.listen(8080);</span><br></pre></td></tr></table></figure></li><li><p>使用koa路由类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let router = new Router();</span><br></pre></td></tr></table></figure></li><li><p>添加一个路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.get(&quot;/login&quot;, async ctx =&gt; &#123;</span><br><span class="line">  if (!ctx.query.user || !ctx.query.pass) &#123;</span><br><span class="line">    ctx.throw(400, &quot;user and password is required&quot;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    ctx.body = &quot;成功&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>将路由添加到server上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.use(router.routes());</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><hr><h2 id="koa"><a href="#koa" class="headerlink" title="koa"></a>koa</h2><ol><li>v1 generator</li><li>v2 过渡版    gennerator&amp;async</li><li>v3 async/await</li></ol><h2 id="路由方法"><a href="#路由方法" class="headerlink" title="路由方法"></a>路由方法</h2><ol><li>get</li><li>post</li><li>all (所有方法都认)</li></ol><h2 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h2><ol><li>koa将路由独立出来，可以将路由嵌套<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/user</span><br><span class="line">/company</span><br><span class="line">/</span><br><span class="line">/admin</span><br><span class="line">/news</span><br><span class="line">/sport</span><br><span class="line">/woman</span><br></pre></td></tr></table></figure></li></ol><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><ol><li>urlencoded传参        <a href="http://k.com/user?a=1" target="_blank" rel="noopener">http://k.com/user?a=1</a><ul><li>灵活</li><li>可省略</li></ul></li><li>params传参        <a href="http://k.com/user/1" target="_blank" rel="noopener">http://k.com/user/1</a><ul><li>利于seo（相对静态）</li></ul></li></ol><h2 id="后台获取信息"><a href="#后台获取信息" class="headerlink" title="后台获取信息"></a>后台获取信息</h2><ol><li>ctx.params</li><li>ctx.query</li><li>ctx.method</li><li>ctx.url</li></ol><hr><ol><li>server.context: 相当于ctx的原型（prototype）</li></ol><hr><ol><li>ctx.request</li><li>ctx.response<br>信息</li></ol><hr><ol><li>ctx.method    请求方法</li><li>ctx.url</li><li>ctx.path</li><li>ctx.query    get数据</li><li>ctx.ip        客户端的ip</li><li>ctx.headers    请求头</li></ol><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><ol><li>ctx.throw(code, msg)</li><li>ctx.assert(条件, code, msg)</li></ol><hr><ol><li>ctx.state=305 (状态码)</li><li>ctx.redirect(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">http://www.baidu.com&#39;</a>) (重定向到其他页面)</li><li>ctx.attachment (发送文件给用户)<br>安装koa-static(访问静态页面)</li></ol><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install koa-static -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 引入</span><br><span class="line">const static require(&apos;koa-static&apos;);</span><br><span class="line">// 使用</span><br><span class="line">server.use(static(&apos;./static&apos;), &#123;</span><br><span class="line">maxage: 86400 * 1000, // 单位：毫秒</span><br><span class="line">index: &apos;index.html &apos; // 默认访问文件</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="安装koa-better-body"><a href="#安装koa-better-body" class="headerlink" title="安装koa-better-body "></a>安装koa-better-body </h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm koa-beeter-body -S</span><br><span class="line">// 支持文件数据，json数据，formData数据</span><br><span class="line">ctx.request.fields //获取请求的参数</span><br></pre></td></tr></table></figure><h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server.keys=[&apos;sdfg&apos;,&apos;sdfsdfsdfs&apos;]</span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">ctx.cookies.set(&apos;user&apos;, &apos;bule&apos;, &#123;</span><br><span class="line">// 配置</span><br><span class="line">maxAge: 14 * 86400 * 1000, // 有效期</span><br><span class="line">signed: true // 签名的</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(ctx.cookies.get(&apos;user&apos;,&#123;signed:true&#125;))</span><br><span class="line">// 签名，在设置和获取时，都需要将signed设置为true</span><br><span class="line">&#125;)</span><br><span class="line">// ctx.cookies.set()</span><br><span class="line">// ctx.cookies.get()</span><br></pre></td></tr></table></figure><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 需要引入</span><br><span class="line">const session = require(&apos;koa-session&apos;);</span><br><span class="line">server.keys=[&apos;sdfg&apos;,&apos;sdfsdfsdfs&apos;]</span><br><span class="line">server.use(session(&#123;</span><br><span class="line">maxAge: 20 * 60 * 1000, // 有效期</span><br><span class="line">renew: true // 自动续期(用户有任何操作，有效期重新计算)</span><br><span class="line">&#125;, server)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">if(!ctx.session[&apos;view&apos;])&#123;</span><br><span class="line">ctx.session[&apos;view&apos;]=0;</span><br><span class="line">&#125;</span><br><span class="line">ctx.session[&apos;view&apos;]++;</span><br><span class="line">ctx.body=`欢迎你第$&#123;ctx.session.view&#125;次来访`;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql co-mysql -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">const mysql = require(&apos;mysql&apos;);</span><br><span class="line">const co = require(&apos;co-mysql&apos;);</span><br><span class="line"></span><br><span class="line">let conn = mysql.createPool(&#123;</span><br><span class="line">host: &apos;localhost&apos;,</span><br><span class="line">user: &apos;root&apos;,</span><br><span class="line">password: &apos;&apos;,</span><br><span class="line">database: &apos;2018&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">let db = co(conn);</span><br><span class="line"></span><br><span class="line">let server = new Koa();</span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">server.context.db=db;</span><br><span class="line"></span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">let data = await ctx.db.query(&apos;SELECT * FROM item_table&apos;);</span><br><span class="line"></span><br><span class="line">ctx.body = data;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><!-- 安卓开发环境---1. JDk 1.82. Python 2.73. Android Studio4. ADK 285. AVD 28 -->]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>koa服务器渲染</title>
      <link href="/2019/11/12/koa%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
      <url>/2019/11/12/koa%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%B2%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<h2 id="koa服务器渲染"><a href="#koa服务器渲染" class="headerlink" title="koa服务器渲染"></a>koa服务器渲染</h2><p>服务器渲染 pug/ejs</p><ol><li>安全性</li><li>SEO</li></ol><p>客户端渲染 Vue/React</p><ol><li>节约流量</li><li>用户体验</li></ol><a id="more"></a><hr><p>服务端 – 模板引擎<br>pug(jade)    侵入式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i pug -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const pug = require(&apos;pug&apos;);</span><br><span class="line"></span><br><span class="line">pug.randerFile(&apos;./template/1.pug&apos;, &#123;</span><br><span class="line">pretty: true</span><br><span class="line">&#125;, (err, data) =&gt; &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(&apos;渲染失败&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 建立1.pug(模板),内容如下</span><br><span class="line">dctype</span><br><span class="line">html</span><br><span class="line">head</span><br><span class="line">meta(charset=&quot;utf-8&quot;)</span><br><span class="line">meta(name=&quot;网站名&quot;,content=&quot;test&quot;)</span><br><span class="line">title test</span><br><span class="line">script.</span><br><span class="line">console.log(1212)</span><br><span class="line">body</span><br></pre></td></tr></table></figure><p>ejs            非侵入式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i ejs -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const ejs = require(&apos;ejs&apos;);</span><br><span class="line"></span><br><span class="line">ejs.randerFile(&apos;./template/1.ejs&apos;, &#123;</span><br><span class="line">name: &quot;小明&quot;</span><br><span class="line">&#125;, (err, data) =&gt; &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(&apos;错了&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 建立 2.ejs , &lt;% 中间写js代码 %&gt;</span><br><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%=name%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于搭建博客那些事</title>
      <link href="/2019/11/11/old-blog/"/>
      <url>/2019/11/11/old-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="为何搭建博客"><a href="#为何搭建博客" class="headerlink" title="为何搭建博客"></a>为何搭建博客</h2><p>在2017年年底时，我就准备搭建一个博客，主要是作为一个vue实战项目练手（刚好学习了vue）以及作为实习面试的作品，然后利用业余时间完成自己一个版的博客，部署到了阿里云上面</p><a id="more"></a><p>由于部署在阿里云上面，每年是需要支付服务器、域名的费用。所以当我发现hexo框架时，所以重新使用hexo重新搭建了一个博客，只需要部署到github上面就行了，图片上传到七牛云，降低维护成本，因为github访问速度太慢了，后面又将项目重新部署在gitee</p><p>以前弄博客是为了练习和当作面试的一个作品，现在写博客主要是为了记录和分享自己所学的东西</p><h2 id="记录一下旧的blog页面"><a href="#记录一下旧的blog页面" class="headerlink" title="记录一下旧的blog页面"></a>记录一下旧的blog页面</h2><hr><p>前端使用vue全家桶，build后是单页面，seo太差，加上需要服务器费用，所以也就放弃维护了</p><h4 id="桌面浏览器主页"><a href="#桌面浏览器主页" class="headerlink" title="桌面浏览器主页"></a>桌面浏览器主页</h4><hr><p><img src="http://cdn.kcz66.com/pc%E9%A6%96%E9%A1%B5.jpg" alt="桌面浏览器主页"></p><h4 id="桌面浏览器关于"><a href="#桌面浏览器关于" class="headerlink" title="桌面浏览器关于"></a>桌面浏览器关于</h4><hr><p><img src="http://cdn.kcz66.com/pc%E5%85%B3%E4%BA%8E%E6%88%91.jpg" alt="桌面浏览器关于"></p><h4 id="桌面浏览器留言"><a href="#桌面浏览器留言" class="headerlink" title="桌面浏览器留言"></a>桌面浏览器留言</h4><hr><p><img src="http://cdn.kcz66.com/pc%E7%95%99%E8%A8%80%E6%9D%BF.jpg" alt="桌面浏览器留言"></p><h4 id="移动端导航"><a href="#移动端导航" class="headerlink" title="移动端导航"></a>移动端导航</h4><hr><p><img src="http://cdn.kcz66.com/h5%E5%AF%BC%E8%88%AA.jpg" alt="移动端导航"></p><h4 id="移动端首页1"><a href="#移动端首页1" class="headerlink" title="移动端首页1"></a>移动端首页1</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B51.jpg" alt="移动端首页1"></p><h4 id="移动端首页2"><a href="#移动端首页2" class="headerlink" title="移动端首页2"></a>移动端首页2</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B52.jpg" alt="移动端首页2"></p><h4 id="移动端首页3"><a href="#移动端首页3" class="headerlink" title="移动端首页3"></a>移动端首页3</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B53.jpg" alt="移动端首页3"></p><h4 id="移动端关于"><a href="#移动端关于" class="headerlink" title="移动端关于"></a>移动端关于</h4><hr><p><img src="http://cdn.kcz66.com/h5%E5%85%B3%E4%BA%8E.jpg" alt="移动端关于"></p><h4 id="移动端留言"><a href="#移动端留言" class="headerlink" title="移动端留言"></a>移动端留言</h4><hr><p><img src="http://cdn.kcz66.com/h5%E7%95%99%E8%A8%80%E6%9D%BF.jpg" alt="移动端留言"></p><h4 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h4><hr><p>后台使用php，mysql</p><h4 id="文章列表页"><a href="#文章列表页" class="headerlink" title="文章列表页"></a>文章列表页</h4><hr><p><img src="http://cdn.kcz66.com/%E5%90%8E%E5%8F%B0%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8.jpg" alt="文章列表页"></p><h4 id="文章编辑页"><a href="#文章编辑页" class="headerlink" title="文章编辑页"></a>文章编辑页</h4><hr><p><img src="http://cdn.kcz66.com/%E5%90%8E%E5%8F%B0%E6%96%87%E7%AB%A0%E7%BC%96%E8%BE%91.jpg" alt="文章编辑页"></p>]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 生活点滴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自行车</title>
      <link href="/2019/11/10/%E8%87%AA%E8%A1%8C%E8%BD%A6/"/>
      <url>/2019/11/10/%E8%87%AA%E8%A1%8C%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<h3 id="自行车"><a href="#自行车" class="headerlink" title="自行车"></a>自行车</h3><p>当场捕捉</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开车 </tag>
            
            <tag> 非法法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
