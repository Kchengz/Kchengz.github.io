<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>monaco-editor 在 vue-cli3 使用</title>
      <link href="/2020/01/05/monaco-editor/"/>
      <url>/2020/01/05/monaco-editor/</url>
      
        <content type="html"><![CDATA[<h2 id="monaco-editor-简介"><a href="#monaco-editor-简介" class="headerlink" title="monaco-editor 简介"></a>monaco-editor 简介</h2><p><a href="https://microsoft.github.io/monaco-editor/" target="_blank" rel="noopener">monaco-editor</a>是为VS Code提供支持的代码编辑器，支持IE 11，Edge，Chrome，Firefox，Safari和Opera，兼容VS Code的快键键</p><a id="more"></a><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install monaco-editor --save</span><br><span class="line">npm install monaco-editor-webpack-plugin --save-dev</span><br><span class="line"># OR</span><br><span class="line">yarn add monaco-editor</span><br><span class="line">yarn add monaco-editor-webpack-plugin</span><br></pre></td></tr></table></figure><h2 id="在vue-config-js文件下配置"><a href="#在vue-config-js文件下配置" class="headerlink" title="在vue.config.js文件下配置"></a>在vue.config.js文件下配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MonacoWebpackPlugin = <span class="built_in">require</span>(<span class="string">"monaco-editor-webpack-plugin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  configureWebpack: &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">      <span class="keyword">new</span> MonacoWebpackPlugin(&#123;</span><br><span class="line">        languages: [<span class="string">"json"</span>],<span class="comment">// 配置需要的languages，减少打包后的体积</span></span><br><span class="line">        output: <span class="string">"./static/js/monaco-editor"</span></span><br><span class="line">      &#125;)</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义monaco组件"><a href="#定义monaco组件" class="headerlink" title="定义monaco组件"></a>定义monaco组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">"container"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"monaco-editor"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:style</span>=<span class="string">"`height: $&#123;height&#125;px`"</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> * <span class="keyword">as</span> monaco <span class="keyword">from</span> <span class="string">"monaco-editor"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"Monaco"</span>,</span></span><br><span class="line">  props: &#123;</span><br><span class="line">    monacoOptions: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          value: <span class="string">""</span>, <span class="comment">// 编辑器的值</span></span></span><br><span class="line"><span class="actionscript">          theme: <span class="string">"vs-dark"</span>, <span class="comment">// 编辑器主题：vs, hc-black, or vs-dark，更多选择详见官网</span></span></span><br><span class="line"><span class="actionscript">          roundedSelection: <span class="literal">false</span>, <span class="comment">// 右侧不显示编辑器预览框</span></span></span><br><span class="line"><span class="actionscript">          autoIndent: <span class="literal">true</span> <span class="comment">// 自动缩进</span></span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    height: &#123;</span><br><span class="line"><span class="javascript">      type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>: <span class="number">300</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.init();</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    init() &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 初始化container的内容，销毁之前生成的编辑器</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$refs.container.innerHTML = <span class="string">""</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.editorOptions = <span class="keyword">this</span>.monacoOptions;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 生成编辑器对象</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.monacoEditor = monaco.editor.create(</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.$refs.container,</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.editorOptions</span></span><br><span class="line">      );</span><br><span class="line"><span class="actionscript">      <span class="comment">// 编辑器内容发生改变时触发</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.monacoEditor.onDidChangeModelContent(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.$emit(<span class="string">"change"</span>, <span class="keyword">this</span>.monacoEditor.getValue());</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.$emit(<span class="string">"input"</span>, <span class="keyword">this</span>.monacoEditor.getValue());</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="comment">// 供父组件调用手动获取值</span></span></span><br><span class="line">    getVal() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> <span class="keyword">this</span>.monacoEditor.getValue();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">monaco</span></span></span><br><span class="line"><span class="tag">        <span class="attr">ref</span>=<span class="string">"monaco"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">change</span>=<span class="string">"handleChange"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:monacoOptions</span>=<span class="string">"monacoOptions"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-model</span>=<span class="string">"monacoOptions.value"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:height</span>=<span class="string">"580"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">monaco</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> monaco <span class="keyword">from</span> <span class="string">"../../Manaco/manaco"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"demo"</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      monacoOptions: &#123;</span><br><span class="line"><span class="actionscript">        value: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        readOnly: <span class="literal">false</span>, <span class="comment">// 是否只读</span></span></span><br><span class="line"><span class="actionscript">        language: <span class="string">"json"</span>, <span class="comment">// 语言类型</span></span></span><br><span class="line"><span class="actionscript">        theme: <span class="string">"vs-dark"</span> <span class="comment">// 编辑器主题</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    monaco</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    handleChange(val)&#123;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(val)</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> editor </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue + cesium 构建项目</title>
      <link href="/2019/11/24/vue-cesium/"/>
      <url>/2019/11/24/vue-cesium/</url>
      
        <content type="html"><![CDATA[<h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><ul><li><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Nodejs</a> 安装，具体安装步骤自行百度，不做赘述</li><li>vue/cli 安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 安装命令</span><br><span class="line">npm i -g @vue/cli</span><br><span class="line"></span><br><span class="line">// 查看版本</span><br><span class="line">vue -V</span><br><span class="line">// @vue/cli 4.0.5</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ul><li>使用vue/cli创建项目</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create cesium-demo</span><br></pre></td></tr></table></figure><ul><li>安装Cesium</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i cesium --save</span><br></pre></td></tr></table></figure><h2 id="配置webpack"><a href="#配置webpack" class="headerlink" title="配置webpack"></a>配置webpack</h2><p>使用 Vue CLI 3 创建的项目，需要在目录下新建 vue.config.js 文件对 webpack 进行配置，帮助文件参见 vue.config.js</p><p>安装 webpack 插件</p><p>copy-webpack-plugin // 用于拷贝项目文件至 build 文件</p><p>strip-pragma-loader（生产环境）// 用于在生产环境中移除 errors 和 warnings</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i strip-pragma-loader copy-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><h2 id="在根目录新建vue-config-js-示例"><a href="#在根目录新建vue-config-js-示例" class="headerlink" title="在根目录新建vue.config.js 示例"></a>在根目录新建vue.config.js 示例</h2><p>Cesium 的 webpack 配置参见 <a href="https://github.com/AnalyticalGraphicsInc/cesium-webpack-example" target="_blank" rel="noopener">cesium-webpack-example</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">const webpack = <span class="keyword">require</span>(<span class="string">'webpack'</span>)</span><br><span class="line">const path = <span class="keyword">require</span>(<span class="string">'path'</span>)</span><br><span class="line">const CopyWebpackPlugin = <span class="keyword">require</span>(<span class="string">'copy-webpack-plugin'</span>)</span><br><span class="line">const cesiumSource = <span class="string">'node_modules/cesium/Source'</span></span><br><span class="line">const cesiumWorkers = <span class="string">'../Build/Cesium/Workers'</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  <span class="symbol">publicPath:</span> <span class="string">'./'</span>,</span><br><span class="line">  <span class="symbol">assetsDir:</span> <span class="string">'./static'</span>,</span><br><span class="line">  <span class="symbol">productionSourceMap:</span> <span class="literal">false</span>,</span><br><span class="line">  <span class="symbol">devServer:</span> &#123;</span><br><span class="line">    <span class="symbol">open:</span> <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="symbol">chainWebpack:</span> config =&gt; &#123;</span><br><span class="line">    config</span><br><span class="line">      .node.set(<span class="string">'fs'</span>, <span class="string">'empty'</span>).<span class="keyword">end</span>()</span><br><span class="line">      .resolve.<span class="keyword">alias</span>.set(<span class="string">'cesium'</span>, path.resolve(__dirname, cesiumSource)).<span class="keyword">end</span>().<span class="keyword">end</span>()</span><br><span class="line">      .amd(&#123;</span><br><span class="line">        <span class="symbol">toUrlUndefined:</span> <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="class">.<span class="keyword">module</span></span></span><br><span class="line">      .set(<span class="string">'unknownContextCritical'</span>, <span class="literal">false</span>)</span><br><span class="line">      .rule()</span><br><span class="line">      .<span class="keyword">include</span></span><br><span class="line">      .add(path.resolve(__dirname, cesiumSource))</span><br><span class="line">      .<span class="keyword">end</span>()</span><br><span class="line">      .post()</span><br><span class="line">      .pre()</span><br><span class="line">      .test(<span class="regexp">/\.js$/</span>)</span><br><span class="line">      .use(<span class="string">'strip'</span>)</span><br><span class="line">      .loader(<span class="string">'strip-pragma-loader'</span>)</span><br><span class="line">      .options(&#123;</span><br><span class="line">        <span class="symbol">pragmas:</span> &#123;</span><br><span class="line">          <span class="symbol">debug:</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="keyword">end</span>()</span><br><span class="line">      .<span class="keyword">end</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="symbol">configureWebpack:</span> config =&gt; &#123;</span><br><span class="line">    let plugins = []</span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">      plugins = [</span><br><span class="line">        new webpack.DefinePlugin(&#123;</span><br><span class="line">          <span class="string">'CESIUM_BASE_URL'</span>: JSON.stringify(<span class="string">'static'</span>)</span><br><span class="line">        &#125;),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, cesiumWorkers), <span class="symbol">to:</span> <span class="string">'static/Workers'</span> &#125; ]),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, <span class="string">'Assets'</span>), <span class="symbol">to:</span> <span class="string">'static/Assets'</span> &#125; ]),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, <span class="string">'Widgets'</span>), <span class="symbol">to:</span> <span class="string">'static/Widgets'</span> &#125; ])</span><br><span class="line">      ]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      plugins = [</span><br><span class="line">        new webpack.DefinePlugin(&#123;</span><br><span class="line">          <span class="string">'CESIUM_BASE_URL'</span>: JSON.stringify(<span class="string">''</span>)</span><br><span class="line">        &#125;),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, cesiumWorkers), <span class="symbol">to:</span> <span class="string">'Workers'</span> &#125; ]),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, <span class="string">'Assets'</span>), <span class="symbol">to:</span> <span class="string">'Assets'</span> &#125; ]),</span><br><span class="line">        new CopyWebpackPlugin([ &#123; <span class="symbol">from:</span> path.join(cesiumSource, <span class="string">'Widgets'</span>), <span class="symbol">to:</span> <span class="string">'Widgets'</span> &#125; ])</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="symbol">plugins:</span> plugins</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在main-js导入cesium"><a href="#在main-js导入cesium" class="headerlink" title="在main.js导入cesium"></a>在main.js导入cesium</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/<span class="regexp">/ 引入cesium</span></span><br><span class="line"><span class="regexp">import 'cesium/</span>Widgets/widgets.css<span class="string">'</span></span><br><span class="line"><span class="string">let Cesium = require('</span>cesium/Cesium<span class="string">')</span></span><br><span class="line"><span class="string">Vue.prototype.Cesium = Cesium</span></span><br></pre></td></tr></table></figure><h2 id="创建Cesium组件"><a href="#创建Cesium组件" class="headerlink" title="创建Cesium组件"></a>创建Cesium组件</h2><p>在src/components文件夹下创建Cesium.vue文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=<span class="string">"CesiumContent"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/template</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  <span class="symbol">name:</span> <span class="string">'Cesium'</span>,</span><br><span class="line">  <span class="symbol">methods:</span> &#123;</span><br><span class="line">    initCesium () &#123;</span><br><span class="line">      /<span class="regexp">/ 加载谷歌卫星地图</span></span><br><span class="line"><span class="regexp">      let url = 'http:/</span><span class="regexp">/mt1.google.cn/vt</span><span class="regexp">/lyrs=s&amp;h1=zh-CN&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;s=Gali'</span></span><br><span class="line"><span class="regexp">      let google = new this.Cesium.UrlTemplateImageryProvider(&#123; url: url &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 初始化</span></span><br><span class="line"><span class="regexp">      let viewer = new this.Cesium.Viewer('CesiumContent', &#123;</span></span><br><span class="line"><span class="regexp">        baseLayerPicker: false,</span></span><br><span class="line"><span class="regexp">        imageryProvider: google,</span></span><br><span class="line"><span class="regexp">        terrainProvider: this.Cesium.createWorldTerrain(&#123; /</span><span class="regexp">/ 添加地形</span></span><br><span class="line"><span class="regexp">          requestWaterMask: true,</span></span><br><span class="line"><span class="regexp">          requestVertexNormals: true</span></span><br><span class="line"><span class="regexp">        &#125;)</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">      /</span><span class="regexp">/ 组件初始化完成，触发ready事件</span></span><br><span class="line"><span class="regexp">      this.$emit('ready', viewer)</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  mounted () &#123;</span></span><br><span class="line"><span class="regexp">    this.initCesium()</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/script</span>&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="comment">#CesiumContent&#123;</span></span><br><span class="line">  <span class="symbol">height:</span><span class="number">100</span>vh;</span><br><span class="line">  <span class="symbol">width:</span><span class="number">100</span>vw;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h2><p>在对应的.vue文件引入cesium组件，或者复制下面代码到src/app.vue查看效果</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class="home"&gt;</span><br><span class="line">        &lt;cesium @ready=<span class="string">"handleReady"</span> /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/template</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import cesium from <span class="string">'@/components/Cesium.vue'</span></span><br><span class="line">export default &#123;</span><br><span class="line">  <span class="symbol">components:</span> &#123;</span><br><span class="line">    cesium</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="symbol">methods:</span> &#123;</span><br><span class="line">    handleReady (viewer) &#123;</span><br><span class="line">console.log(<span class="string">'cesium加载完成'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>到这里已经将cesium集成到vue了，可以愉快开发了</p><h2 id="cesium-API使用记录"><a href="#cesium-API使用记录" class="headerlink" title="cesium API使用记录"></a>cesium API使用记录</h2><ul><li>加载谷歌影像，及初始化</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载谷歌卫星地图</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">'http://mt1.google.cn/vt/lyrs=s&amp;h1=zh-CN&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&amp;s=Gali'</span>;</span><br><span class="line"><span class="keyword">let</span> google = <span class="keyword">new</span> Cesium.UrlTemplateImageryProvider(&#123;<span class="attr">url</span>:url&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">let</span> viewer = <span class="keyword">new</span> Cesium.Viewer(<span class="string">'app'</span>,&#123;</span><br><span class="line">  baseLayerPicker: <span class="literal">false</span>,</span><br><span class="line">  imageryProvider: google,</span><br><span class="line">  terrainProvider: Cesium.createWorldTerrain(&#123;</span><br><span class="line">    requestWaterMask: <span class="literal">true</span>,</span><br><span class="line">    requestVertexNormals: <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>相机默认视角</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">viewer.camera.setView(&#123;</span><br><span class="line">      destination: Cesium.Cartesian3.fromDegrees(<span class="number">110.828918</span>, <span class="number">24.831243</span>, <span class="number">90.0</span>), <span class="comment">// 坐标位置，及高度</span></span><br><span class="line">      orientation: &#123;</span><br><span class="line">        heading: Cesium.Math.toRadians(<span class="number">0</span>), <span class="comment">// X轴左右视角</span></span><br><span class="line">        pitch: Cesium.Math.toRadians(<span class="number">-90</span>), <span class="comment">// Y轴上下视角</span></span><br><span class="line">        roll: <span class="number">0.0</span> <span class="comment">// z轴旋转相机</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li>相机调整-带动画</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">viewer.camera.flyTo(&#123;  </span><br><span class="line">    destination : Cesium.Cartesian3.fromDegrees(<span class="number">-75.62898254394531</span>, <span class="number">40.02804946899414</span>, <span class="number">90.0</span>)  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>gltf模型载入</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scene = viewer.scene;</span><br><span class="line"><span class="keyword">var</span> modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(Cesium.Cartesian3.fromDegrees(<span class="number">110.828918</span>, <span class="number">24.831243</span>, <span class="number">80.0</span>));</span><br><span class="line"><span class="keyword">var</span> model = scene.primitives.add(Cesium.Model.fromGltf(&#123;</span><br><span class="line">  url: <span class="string">'./k.gltf'</span>,  <span class="comment">//载入当前路径下的k.gltf</span></span><br><span class="line">  modelMatrix: modelMatrix,</span><br><span class="line">  scale: <span class="number">3.0</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><ul><li>加载3D Tiles</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里使用官方的3D Tiles数据，加载纽约区域的</span></span><br><span class="line"><span class="keyword">let</span> city = viewer.scene.primitives.add(<span class="keyword">new</span> Cesium.Cesium3DTileset(&#123;<span class="attr">url</span>: Cesium.IonResource.fromAssetId(<span class="number">3839</span>)&#125;));</span><br><span class="line"><span class="comment">// 根据模型高度，设置不同颜色</span></span><br><span class="line"><span class="keyword">let</span> heightStyle = <span class="keyword">new</span> Cesium.Cesium3DTileStyle(&#123;</span><br><span class="line">  color: &#123;</span><br><span class="line">    conditions:[</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 300"</span>,<span class="string">"rgba(45,0,75,0.5)"</span>],</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 200"</span>,<span class="string">"rgb(102,71,151)"</span>],</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 100"</span>,<span class="string">"rgb(170,162,204)"</span>],</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 50"</span>,<span class="string">"rgb(60,102,204)"</span>],</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 20"</span>,<span class="string">"rgb(190,102,84)"</span>],</span><br><span class="line">      [<span class="string">"$&#123;height&#125; &gt;= 10"</span>,<span class="string">"rgb(155,80,164)"</span>],</span><br><span class="line">      [<span class="string">"true"</span>,<span class="string">"rgb(170,162,204)"</span>],</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">city.style = heightStyle;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> cesium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个开源项目 k-form-design</title>
      <link href="/2019/11/20/record-k-form-design/"/>
      <url>/2019/11/20/record-k-form-design/</url>
      
        <content type="html"><![CDATA[<h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>这是一个基于vue和ant-design-vue实现的表单设计器，主要功能是可以通过拖拽生成表单，最后能导出相应的json数据，并且能通过导出的json数据构建成表单</p><a id="more"></a><h2 id="为何要写这个项目"><a href="#为何要写这个项目" class="headerlink" title="为何要写这个项目"></a>为何要写这个项目</h2><p>因为我们这边需要开发工作流，而我们没有自己的表单设计器，本来是有打算买一个第三方的表单设计器来用的，但是我个人觉得第三方可扩展性不能满足我们这边的需要，而且需要额外安装一个UI（原框架使用ant-design-vue），所以就决定自己写一个表单设计器</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>这是我做的第一个npm组件，写在博客这里记录一下</p><p>写这个项目，我学会了如何将组件封装成npm包并上传，开源项目文档编写，对于vue和npm都有了更深入的了解，我相信有付出就有收获</p><p>2019-11-20</p><p>因为是第一次将vue的组件打包并上传到npm上，当我成功通过 npm install 安装时，我内心也是十分激动的，为了打包这个组件，我去网上查了很多资料，也学到了很多东西，我打算后期继续维护更新这个项目</p><p><a href="https://github.com/Kchengz/k-form-design" target="_blank" rel="noopener">开源地址</a><br><a href="https://www.npmjs.com/package/k-form-design" target="_blank" rel="noopener">npm包地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 日志 </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记2</title>
      <link href="/2019/11/16/vue-note2/"/>
      <url>/2019/11/16/vue-note2/</url>
      
        <content type="html"><![CDATA[<h2 id="vue事件修饰符"><a href="#vue事件修饰符" class="headerlink" title="vue事件修饰符"></a>vue事件修饰符</h2><ul><li>stop 禁止冒泡</li><li>once 只触发一次，单次事件</li><li>prevent 组件默认事件</li><li>native 启用原生事件（组件）</li><li>keycode|name 筛选按键</li><li>self</li><li>capture</li></ul><a id="more"></a><h2 id="computed-计算属性"><a href="#computed-计算属性" class="headerlink" title="computed-计算属性"></a>computed-计算属性</h2><ul><li>缓存-性能</li><li>方便</li><li>可读、写</li><li>属性的形式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">  name: &#123;</span><br><span class="line">    get()&#123;</span><br><span class="line">    &lt;!-- 可读 --&gt;</span><br><span class="line">      return this.value</span><br><span class="line">    &#125;,</span><br><span class="line">    set(value)&#123;</span><br><span class="line">      &lt;!-- 可写 --&gt;</span><br><span class="line">      this.value = value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="watch-监听"><a href="#watch-监听" class="headerlink" title="watch-监听"></a>watch-监听</h2><ul><li>监听属性，当属性改变触发事件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">watch:&#123;</span><br><span class="line">  name()&#123;</span><br><span class="line">    console.log(&apos;name变了&apos;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="vue-router"><a href="#vue-router" class="headerlink" title="vue-router"></a>vue-router</h2><ul><li><p>容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;router-view&gt;</span><br></pre></td></tr></table></figure></li><li><p>跳转路由标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/a&quot;&gt;&lt;router-link&gt;</span><br></pre></td></tr></table></figure></li><li><p>router函数操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push()</span><br><span class="line"></span><br><span class="line">// history是一个栈</span><br><span class="line">push(string | object) // 入栈</span><br><span class="line">replace(string | object) // 替换最后一个历史记录（当前）</span><br><span class="line">go(int) // 前进后台</span><br><span class="line"></span><br><span class="line">$route 获取路由信息</span><br><span class="line"></span><br><span class="line">$router 控制路由跳转</span><br></pre></td></tr></table></figure></li><li><p>监视路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 1.watch - 不推荐</span><br><span class="line">  简单-只能看不能操作</span><br><span class="line">watch: &#123;</span><br><span class="line">  $route(value, old_value)&#123;</span><br><span class="line">    console.log(value, old_value)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 2.路由守卫</span><br></pre></td></tr></table></figure></li><li><p>路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">router = new VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/a&apos;,</span><br><span class="line">      component: &#123; template: &apos;&lt;div&gt;我是组件a&lt;/div&gt;&apos; &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/b&apos;,</span><br><span class="line">      component: &#123; template: &apos;&lt;div&gt;我是组件b&lt;/div&gt;&apos; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>多视图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;router-view name=&quot;header&quot;&gt;&lt;router-view&gt;</span><br><span class="line">&lt;router-view&gt;&lt;router-view&gt;</span><br><span class="line">&lt;router-view name=&quot;footer&quot;&gt;&lt;router-view&gt;</span><br><span class="line"></span><br><span class="line">router = new VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/a&apos;,</span><br><span class="line">      components: &#123; </span><br><span class="line">        defaulte: &#123;template: &apos;&lt;div&gt;我是组件a&lt;/div&gt;&apos;&#125;,</span><br><span class="line">        header: &#123;template: &apos;&lt;div&gt;我是头部&lt;/div&gt;&apos;&#125;,</span><br><span class="line">        footer: &#123;template: &apos;&lt;div&gt;我是底部&lt;/div&gt;&apos;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>路由嵌套<br>使用children</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  routes:[</span><br><span class="line">    &#123;</span><br><span class="line">      path:<span class="string">'/index'</span>,</span><br><span class="line">      name:<span class="string">'index'</span>,</span><br><span class="line">      children:[</span><br><span class="line">        &#123;</span><br><span class="line">          path:<span class="string">"/1"</span>,</span><br><span class="line">          component:&#123;<span class="attr">template</span>:<span class="string">'&lt;div&gt;1111&lt;/div&gt;'</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记1</title>
      <link href="/2019/11/14/vue-note1/"/>
      <url>/2019/11/14/vue-note1/</url>
      
        <content type="html"><![CDATA[<h2 id="了解三大框架"><a href="#了解三大框架" class="headerlink" title="了解三大框架"></a>了解三大框架</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue</span><br><span class="line">react</span><br><span class="line">angular</span><br></pre></td></tr></table></figure><p>现代开发模式- 20%表现层</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue/react</span><br><span class="line">vue的核心是数据</span><br></pre></td></tr></table></figure><a id="more"></a><p>传统开发模- 80%表现层</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jQuery</span><br><span class="line">需要花大量时间在表现层上面</span><br></pre></td></tr></table></figure><h2 id="vm结构"><a href="#vm结构" class="headerlink" title="vm结构"></a>vm结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">el,data,methods</span><br><span class="line">computed,props,watch,template,router,...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>数据同步</li><li>双向绑定</li><li>虚拟DOM:通俗说就是一个大json，存着各个节点数据<ul><li>合并请求</li><li>快速查询</li><li>局部刷新</li></ul></li></ul><h2 id="vue指令（directive）-补充了html的属性"><a href="#vue指令（directive）-补充了html的属性" class="headerlink" title="vue指令（directive）-补充了html的属性"></a>vue指令（directive）-补充了html的属性</h2><ul><li><p>v-bind:给属性绑定数据</p></li><li><p>v-model:数据双向绑定</p><ul><li>数据（data）和input之间双向</li><li>view(html) &lt;-&gt; controller(VM) &lt;-&gt; model(data)</li><li>MVVM模式，model层通过controller层（VM）与view层进行数据双向绑定</li></ul></li><li><p>v-text:将数据以文本形式绑定到标签中，类似innerText</p></li><li><p>v-html:将数据转成html再绑定到标签中，类似innerHTML</p></li><li><p>v-on:绑定事件,如： v-on:click=””</p></li><li><p>v-show:隐藏显示标签</p></li><li><p>v-if:跟v-show效果相同，但是v-if会删除和重新渲染dom节点，而v-show是通过display:none样式隐藏</p></li><li><p>v-for:循环渲染数据，需要配合key使用</p><ul><li>数组 v-for=”(item,index) in array”</li><li>json v-for=”(val,key) in json”</li><li>字符串 v-for=”(char,index) in string”</li><li>数字 v-for=”i in number”</li></ul></li><li><p>v-pre:预编译，提高性能，例如：<br>div标签有等不需要编译的文本，可以给div标签加v-pre指令，直接输入”“文本</p></li><li><p>v-cloak:在页面还未进行编译时，隐藏双向绑定的标签<br>需要配合下面样式使用</p><ul><li>*[v-cloak]{ display:none }</li></ul></li></ul><h2 id="简单的实现双向绑定代码"><a href="#简单的实现双向绑定代码" class="headerlink" title="简单的实现双向绑定代码"></a>简单的实现双向绑定代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">  &lt;title&gt;双向绑定基本原理&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;name&quot;&gt;</span><br><span class="line">    姓名：&#123;&#123;name&#125;&#125; &lt;br&gt;</span><br><span class="line">    年龄：&#123;&#123;age&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    // 获取需要渲染的盒子</span><br><span class="line">    let el = document.getElementById(&apos;app&apos;)</span><br><span class="line">    // 保存盒子的内容</span><br><span class="line">    let template = el.innerHTML</span><br><span class="line">    let _data = &#123;</span><br><span class="line">      name: &apos;小明&apos;,</span><br><span class="line">      age: 18</span><br><span class="line">    &#125;</span><br><span class="line">    // 使用Proxy拦截，数据被修改时触发事件</span><br><span class="line">    let data = new Proxy(_data, &#123;</span><br><span class="line">      set(obj, name, value) &#123;</span><br><span class="line">        obj[name] = value</span><br><span class="line">        // 数据变了，需要重新渲染</span><br><span class="line">        render()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    // 首次加载页面渲染</span><br><span class="line">    render()</span><br><span class="line"></span><br><span class="line">    function render() &#123;</span><br><span class="line">      // 渲染函数</span><br><span class="line">      el.innerHTML = template.replace(/\&#123;\&#123;\w+\&#125;\&#125;/g, str =&gt; &#123;</span><br><span class="line">        str = str.substring(2, str.length - 2)</span><br><span class="line">        return _data[str]</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      // 找所有的v-model</span><br><span class="line">      // 获取所有的input标签</span><br><span class="line">      el.querySelectorAll(&apos;input&apos;).forEach(ele =&gt; &#123;</span><br><span class="line">        // 判断是否有v-model属性</span><br><span class="line">        let key = ele.getAttribute(&apos;v-model&apos;)</span><br><span class="line">        if (key) &#123;</span><br><span class="line">          // 给有v-model的input标签赋值</span><br><span class="line">          ele.value = _data[key]</span><br><span class="line"></span><br><span class="line">          // 监听input标签</span><br><span class="line">          ele.oninput = function () &#123;</span><br><span class="line">            data[key] = this.value</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node框架KOA</title>
      <link href="/2019/11/13/koa/"/>
      <url>/2019/11/13/koa/</url>
      
        <content type="html"><![CDATA[<h2 id="koa-使用"><a href="#koa-使用" class="headerlink" title="koa 使用"></a>koa 使用</h2><ul><li><p>首先需要初始化一个项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure></li><li><p>然后安装 koa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install koa -D</span><br></pre></td></tr></table></figure></li><li><p>新建一个server.js</p></li><li><p>引入koa及koa路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const koa = require(&quot;koa&quot;);</span><br><span class="line">const Router = require(&quot;koa-router&quot;);</span><br></pre></td></tr></table></figure></li><li><p>使用koa类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let server = new koa();</span><br></pre></td></tr></table></figure></li><li><p>监听8080端口号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.listen(8080);</span><br></pre></td></tr></table></figure></li><li><p>使用koa路由类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let router = new Router();</span><br></pre></td></tr></table></figure></li><li><p>添加一个路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.get(&quot;/login&quot;, async ctx =&gt; &#123;</span><br><span class="line">  if (!ctx.query.user || !ctx.query.pass) &#123;</span><br><span class="line">    ctx.throw(400, &quot;user and password is required&quot;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    ctx.body = &quot;成功&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>将路由添加到server上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.use(router.routes());</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><hr><h2 id="koa"><a href="#koa" class="headerlink" title="koa"></a>koa</h2><ol><li>v1 generator</li><li>v2 过渡版 gennerator&amp;async</li><li>v3 async/await</li></ol><h2 id="路由方法"><a href="#路由方法" class="headerlink" title="路由方法"></a>路由方法</h2><ol><li>get</li><li>post</li><li>all (所有方法都认)</li></ol><h2 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h2><ol><li>koa将路由独立出来，可以将路由嵌套<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/user</span><br><span class="line">/company</span><br><span class="line">/</span><br><span class="line">/admin</span><br><span class="line">/news</span><br><span class="line">/sport</span><br><span class="line">/woman</span><br></pre></td></tr></table></figure></li></ol><h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><ol><li>urlencoded传参 <a href="http://k.com/user?a=1" target="_blank" rel="noopener">http://k.com/user?a=1</a><ul><li>灵活</li><li>可省略</li></ul></li><li>params传参 <a href="http://k.com/user/1" target="_blank" rel="noopener">http://k.com/user/1</a><ul><li>利于seo（相对静态）</li></ul></li></ol><h2 id="后台获取信息"><a href="#后台获取信息" class="headerlink" title="后台获取信息"></a>后台获取信息</h2><ol><li>ctx.params</li><li>ctx.query</li><li>ctx.method</li><li>ctx.url</li></ol><hr><ol><li>server.context: 相当于ctx的原型（prototype）</li></ol><hr><ol><li>ctx.request</li><li>ctx.response<br>信息</li></ol><hr><ol><li>ctx.method 请求方法</li><li>ctx.url</li><li>ctx.path</li><li>ctx.query get数据</li><li>ctx.ip 客户端的ip</li><li>ctx.headers 请求头</li></ol><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><ol><li>ctx.throw(code, msg)</li><li>ctx.assert(条件, code, msg)</li></ol><hr><ol><li>ctx.state=305 (状态码)</li><li>ctx.redirect(‘<a href="http://www.baidu.com&#39;" target="_blank" rel="noopener">http://www.baidu.com&#39;</a>) (重定向到其他页面)</li><li>ctx.attachment (发送文件给用户)<br>安装koa-static(访问静态页面)</li></ol><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install koa-static -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 引入</span><br><span class="line">const static require(&apos;koa-static&apos;);</span><br><span class="line">// 使用</span><br><span class="line">server.use(static(&apos;./static&apos;), &#123;</span><br><span class="line">maxage: 86400 * 1000, // 单位：毫秒</span><br><span class="line">index: &apos;index.html &apos; // 默认访问文件</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="安装koa-better-body"><a href="#安装koa-better-body" class="headerlink" title="安装koa-better-body "></a>安装koa-better-body</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm koa-beeter-body -S</span><br><span class="line">// 支持文件数据，json数据，formData数据</span><br><span class="line">ctx.request.fields //获取请求的参数</span><br></pre></td></tr></table></figure><h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server.keys=[&apos;sdfg&apos;,&apos;sdfsdfsdfs&apos;]</span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">ctx.cookies.set(&apos;user&apos;, &apos;bule&apos;, &#123;</span><br><span class="line">// 配置</span><br><span class="line">maxAge: 14 * 86400 * 1000, // 有效期</span><br><span class="line">signed: true // 签名的</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(ctx.cookies.get(&apos;user&apos;,&#123;signed:true&#125;))</span><br><span class="line">// 签名，在设置和获取时，都需要将signed设置为true</span><br><span class="line">&#125;)</span><br><span class="line">// ctx.cookies.set()</span><br><span class="line">// ctx.cookies.get()</span><br></pre></td></tr></table></figure><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 需要引入</span><br><span class="line">const session = require(&apos;koa-session&apos;);</span><br><span class="line">server.keys=[&apos;sdfg&apos;,&apos;sdfsdfsdfs&apos;]</span><br><span class="line">server.use(session(&#123;</span><br><span class="line">maxAge: 20 * 60 * 1000, // 有效期</span><br><span class="line">renew: true // 自动续期(用户有任何操作，有效期重新计算)</span><br><span class="line">&#125;, server)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">if(!ctx.session[&apos;view&apos;])&#123;</span><br><span class="line">ctx.session[&apos;view&apos;]=0;</span><br><span class="line">&#125;</span><br><span class="line">ctx.session[&apos;view&apos;]++;</span><br><span class="line">ctx.body=`欢迎你第$&#123;ctx.session.view&#125;次来访`;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql co-mysql -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">const mysql = require(&apos;mysql&apos;);</span><br><span class="line">const co = require(&apos;co-mysql&apos;);</span><br><span class="line"></span><br><span class="line">let conn = mysql.createPool(&#123;</span><br><span class="line">host: &apos;localhost&apos;,</span><br><span class="line">user: &apos;root&apos;,</span><br><span class="line">password: &apos;&apos;,</span><br><span class="line">database: &apos;2018&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">let db = co(conn);</span><br><span class="line"></span><br><span class="line">let server = new Koa();</span><br><span class="line">server.listen(8080);</span><br><span class="line"></span><br><span class="line">server.context.db=db;</span><br><span class="line"></span><br><span class="line">server.use(async ctx =&gt; &#123;</span><br><span class="line">let data = await ctx.db.query(&apos;SELECT * FROM item_table&apos;);</span><br><span class="line"></span><br><span class="line">ctx.body = data;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>koa服务器渲染</title>
      <link href="/2019/11/12/koa%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
      <url>/2019/11/12/koa%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%B2%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<h2 id="koa服务器渲染"><a href="#koa服务器渲染" class="headerlink" title="koa服务器渲染"></a>koa服务器渲染</h2><p>服务器渲染 pug/ejs</p><ol><li>安全性</li><li>SEO</li></ol><p>客户端渲染 Vue/React</p><ol><li>节约流量</li><li>用户体验</li></ol><hr><p>服务端 – 模板引擎<br>pug(jade) 侵入式</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i pug -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const pug = require(&apos;pug&apos;);</span><br><span class="line"></span><br><span class="line">pug.randerFile(&apos;./template/1.pug&apos;, &#123;</span><br><span class="line">pretty: true</span><br><span class="line">&#125;, (err, data) =&gt; &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(&apos;渲染失败&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 建立1.pug(模板),内容如下</span><br><span class="line">dctype</span><br><span class="line">html</span><br><span class="line">head</span><br><span class="line">meta(charset=&quot;utf-8&quot;)</span><br><span class="line">meta(name=&quot;网站名&quot;,content=&quot;test&quot;)</span><br><span class="line">title test</span><br><span class="line">script.</span><br><span class="line">console.log(1212)</span><br><span class="line">body</span><br></pre></td></tr></table></figure><p>ejs 非侵入式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i ejs -D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const ejs = require(&apos;ejs&apos;);</span><br><span class="line"></span><br><span class="line">ejs.randerFile(&apos;./template/1.ejs&apos;, &#123;</span><br><span class="line">name: &quot;小明&quot;</span><br><span class="line">&#125;, (err, data) =&gt; &#123;</span><br><span class="line">if (err) &#123;</span><br><span class="line">console.log(&apos;错了&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">console.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 建立 2.ejs , &lt;% 中间写js代码 %&gt;</span><br><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%=name%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于搭建博客那些事</title>
      <link href="/2019/11/11/old-blog/"/>
      <url>/2019/11/11/old-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="为何搭建博客"><a href="#为何搭建博客" class="headerlink" title="为何搭建博客"></a>为何搭建博客</h2><p>在2017年年底时，我就准备搭建一个博客，主要是作为一个vue实战项目练手（刚好学习了vue）以及作为实习面试的作品，然后利用业余时间完成自己一个版的博客，部署到了阿里云上面</p><a id="more"></a><p>由于部署在阿里云上面，每年是需要支付服务器、域名的费用。所以当我发现hexo框架时，所以重新使用hexo重新搭建了一个博客，只需要部署到github上面就行了，图片上传到七牛云，降低维护成本，因为github访问速度太慢了，后面又将项目重新部署在gitee</p><p>以前弄博客是为了练习和当作面试的一个作品，现在写博客主要是为了记录和分享自己所学的东西</p><h2 id="记录一下旧的blog页面"><a href="#记录一下旧的blog页面" class="headerlink" title="记录一下旧的blog页面"></a>记录一下旧的blog页面</h2><hr><p>前端使用vue全家桶，build后是单页面，seo太差，加上需要服务器费用，所以也就放弃维护了</p><h4 id="桌面浏览器主页"><a href="#桌面浏览器主页" class="headerlink" title="桌面浏览器主页"></a>桌面浏览器主页</h4><hr><p><img src="http://cdn.kcz66.com/pc%E9%A6%96%E9%A1%B5.jpg" alt="桌面浏览器主页"></p><h4 id="桌面浏览器关于"><a href="#桌面浏览器关于" class="headerlink" title="桌面浏览器关于"></a>桌面浏览器关于</h4><hr><p><img src="http://cdn.kcz66.com/pc%E5%85%B3%E4%BA%8E%E6%88%91.jpg" alt="桌面浏览器关于"></p><h4 id="桌面浏览器留言"><a href="#桌面浏览器留言" class="headerlink" title="桌面浏览器留言"></a>桌面浏览器留言</h4><hr><p><img src="http://cdn.kcz66.com/pc%E7%95%99%E8%A8%80%E6%9D%BF.jpg" alt="桌面浏览器留言"></p><h4 id="移动端导航"><a href="#移动端导航" class="headerlink" title="移动端导航"></a>移动端导航</h4><hr><p><img src="http://cdn.kcz66.com/h5%E5%AF%BC%E8%88%AA.jpg" alt="移动端导航"></p><h4 id="移动端首页1"><a href="#移动端首页1" class="headerlink" title="移动端首页1"></a>移动端首页1</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B51.jpg" alt="移动端首页1"></p><h4 id="移动端首页2"><a href="#移动端首页2" class="headerlink" title="移动端首页2"></a>移动端首页2</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B52.jpg" alt="移动端首页2"></p><h4 id="移动端首页3"><a href="#移动端首页3" class="headerlink" title="移动端首页3"></a>移动端首页3</h4><hr><p><img src="http://cdn.kcz66.com/h5%E9%A6%96%E9%A1%B53.jpg" alt="移动端首页3"></p><h4 id="移动端关于"><a href="#移动端关于" class="headerlink" title="移动端关于"></a>移动端关于</h4><hr><p><img src="http://cdn.kcz66.com/h5%E5%85%B3%E4%BA%8E.jpg" alt="移动端关于"></p><h4 id="移动端留言"><a href="#移动端留言" class="headerlink" title="移动端留言"></a>移动端留言</h4><hr><p><img src="http://cdn.kcz66.com/h5%E7%95%99%E8%A8%80%E6%9D%BF.jpg" alt="移动端留言"></p><h4 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h4><hr><p>后台使用php，mysql</p><h4 id="文章列表页"><a href="#文章列表页" class="headerlink" title="文章列表页"></a>文章列表页</h4><hr><p><img src="http://cdn.kcz66.com/%E5%90%8E%E5%8F%B0%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8.jpg" alt="文章列表页"></p><h4 id="文章编辑页"><a href="#文章编辑页" class="headerlink" title="文章编辑页"></a>文章编辑页</h4><hr><p><img src="http://cdn.kcz66.com/%E5%90%8E%E5%8F%B0%E6%96%87%E7%AB%A0%E7%BC%96%E8%BE%91.jpg" alt="文章编辑页"></p>]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 生活点滴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记3</title>
      <link href="/2019/01/08/vue-note3/"/>
      <url>/2019/01/08/vue-note3/</url>
      
        <content type="html"><![CDATA[<h2 id="数据通信"><a href="#数据通信" class="headerlink" title="数据通信"></a>数据通信</h2><ol><li>用库axios<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建一个axios实例，统一处理</span></span><br><span class="line"><span class="comment">// let axios = Axios.create(&#123;</span></span><br><span class="line"><span class="comment">//   transformRequest:[</span></span><br><span class="line"><span class="comment">//     function (data)&#123;</span></span><br><span class="line"><span class="comment">//       return data</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   ]</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name:<span class="string">'axiosDemo'</span>,</span><br><span class="line">  data()&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      name:<span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> create()&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; data &#125; = <span class="keyword">await</span> axios.get(<span class="string">'./get/demo.json'</span>)</span><br><span class="line">    <span class="keyword">this</span>.name = data.name</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>原生fetch<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name:<span class="string">'fetchDemo'</span>,</span><br><span class="line">  data()&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      name:<span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> create()&#123;</span><br><span class="line">    <span class="comment">// get</span></span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'./get/demo.json'</span>)</span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">await</span> res.json()</span><br><span class="line">    <span class="keyword">this</span>.name = data.name</span><br><span class="line"></span><br><span class="line">    <span class="comment">// post</span></span><br><span class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData()</span><br><span class="line">    formData.append(<span class="string">'a'</span>,<span class="number">123</span>)</span><br><span class="line">    formData.append(<span class="string">'b'</span>,<span class="number">88</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'./post/demo.json'</span>, &#123;</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      body: formData</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">await</span> res.json()</span><br><span class="line">    <span class="keyword">this</span>.name = data.name</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><h2 id="vue组件"><a href="#vue组件" class="headerlink" title="vue组件"></a>vue组件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义组件</span></span><br><span class="line"><span class="keyword">let</span> cmp = &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      a:<span class="number">12</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">"&lt;div&gt;&#123;&#123;a&#125;&#125;&lt;/div&gt;"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用组件方式</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components:&#123;</span><br><span class="line">    cmp</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">'&lt;div&gt;&lt;cmp /&gt;&lt;/div&gt;'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态使用组件方式，is可以绑定变量切换</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components:&#123;</span><br><span class="line">    cmp</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">'&lt;div&gt;&lt;component is="cmp" /&gt;&lt;/div&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> Cmp1 = Vue.component(<span class="string">'Dialog'</span>,&#123;</span><br><span class="line">  template: <span class="string">"&lt;div&gt;&lt;slot/&gt;&lt;/div&gt;"</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components:&#123;</span><br><span class="line">    cmp</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">'&lt;div&gt;&lt;Cmp1&gt;插入数据&lt;/Cmp1&gt;&lt;/div&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> Cmp1 = Vue.component(<span class="string">'Dialog'</span>,&#123;</span><br><span class="line">  template: <span class="string">"&lt;div&gt;&lt;slot name='title'/&gt;&lt;slot name='content'/&gt;&lt;/div&gt;"</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  components:&#123;</span><br><span class="line">    cmp</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;Cmp1&gt;</span></span><br><span class="line"><span class="string">      &lt;template slot="title"&gt;插入title&lt;/template&gt;</span></span><br><span class="line"><span class="string">      &lt;template slot="content"&gt;插入content&lt;/template&gt;</span></span><br><span class="line"><span class="string">    &lt;/Cmp1&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
